Current:  

TODO: 

0. Preserve the state between page reloadings. See - 
https://egghead.io/lessons/javascript-redux-persisting-the-state-to-the-local-storage

1. Create components for text, checkbox inputs and button. These components should have two 
states: view and edit so
we can easily create edit forms from view when nessecesary.
2. Add prop types to components.
3. Make checkbox of todo on the main page editable.
4. Implement pagination for todosList
5. Use storybook.js.org ? (I believe that reportportal use this framework)
11. Add feature so multiple users can register, login and see only their todos and being able
to edit only their todos
13. Show creation date for todo on UI 
14. Sort  todos by creation date
15. Add tab for All, Active and Done todos
16. Add a separate tab for deleted (archived) todos
18. Handle exceptions in api services (403, 404, etc.)
23. Add login using VK
24. Impelement Profile page (name, username, email, picture if available, )
28. How to freeze buttons when submitting a form (especially when using component and its container)
29. Consider replacing services to actions (see https://habr.com/ru/company/hh/blog/310524/)
30. Implement Profile page
31. Validation for the registration page
32. Validation for the login page
33.

Done: 
!25. Move constants to .env file
26. Add config for dev and prod envs like 
here (https://github.com/arcanar7/todo-vue-backend-rest-/tree/master/src/config)
27. Fix redirect to page after successful login
19. Why Login component is rendered twice ? - because there where several routes that triggered login page 
several times
6. Replace basic authentication with OAuth authentication in the AuthService.js
12. Add registration page
!!! 22. Cannot navigate to registration page when use browser url field (works fine with router Link) 
    I could not open /registration page because there was a generic private route that was breaking all
    the public routes when user not logged in.
21. Handle email confirmation (user clicks a link from the email backend sent to 
him and frontend sends the confirmation key to complete the registration. User sees a waiting 
screen and then see the result - message about successed or failed completion)
20. User can login using Github (handle the part with issuing a jwt token for
the user who signed in with his/her github account)
7. Add functionality for deleting todos (soft delete).
8. Check edit page after a few todos deleted. Seems there is a bug.
9. Make sure that when delete a todo the right one is deleted.
10. Add message panel below navbar (show that todo added there)

QUESTIONS:

1. Do I need to create View and Edit components or create generic component that takes
a mode props and show either View or Edit inputs.
What I found on the internet that people using conditioning to do this. So one conponent for new and edit

2. How to create breadcrumbs component? When I am using react-router I need to import components that are 
on the page specified in the breadcrumbs (it looks really hard to overcome and definitely not the best way
to solve this problem).

3. How to stop opening new page when clicking a link ?
I used to use <a> tag for links. To stop opening new pages I just replaced
<a> with <Link>

4. Is it possible to keep all the code for the interaction with REST API in one separate file ?
If you use callbacks then YES.